import { shootPower, shootKaijuPower, getCharXAndY } from "./utils";
export const PENINSULA_TILE_LOOKUP = {
  "14 26": { i: 14, j: 26 },
  "3 31": { i: 3, j: 31 },
  "3 30": { i: 3, j: 30 },
  "4 30": { i: 4, j: 30 },
  "3 29": { i: 3, j: 29 },
  "3 28": { i: 3, j: 28 },
  "3 32": { i: 3, j: 32 },
  "4 32": { i: 4, j: 32 },
  "5 32": { i: 5, j: 32 },
  "6 32": { i: 6, j: 32 },
  "7 32": { i: 7, j: 32 },
  "8 32": { i: 8, j: 32 },
  "9 32": { i: 9, j: 32 },
  "10 32": { i: 10, j: 32 },
  "11 32": { i: 11, j: 32 },
  "12 32": { i: 12, j: 32 },
  "13 32": { i: 13, j: 32 },
  "14 32": { i: 14, j: 32 },
  "15 32": { i: 15, j: 32 },
  "16 32": { i: 16, j: 32 },
  "17 32": { i: 17, j: 32 },
  "17 31": { i: 17, j: 31 },
  "4 28": { i: 4, j: 28 },
  "4 27": { i: 4, j: 27 },
  "4 26": { i: 4, j: 26 },
  "4 25": { i: 4, j: 25 },
  "4 24": { i: 4, j: 24 },
  "4 23": { i: 4, j: 23 },
  "4 22": { i: 4, j: 22 },
  "5 21": { i: 5, j: 21 },
  "5 20": { i: 5, j: 20 },
  "5 19": { i: 5, j: 19 },
  "6 19": { i: 6, j: 19 },
  "6 18": { i: 6, j: 18 },
  "5 16": { i: 5, j: 16 },
  "6 17": { i: 6, j: 17 },
  "4 16": { i: 4, j: 16 },
  "3 15": { i: 3, j: 15 },
  "3 14": { i: 3, j: 14 },
  "3 13": { i: 3, j: 13 },
  "2 13": { i: 2, j: 13 },
  "2 12": { i: 2, j: 12 },
  "2 11": { i: 2, j: 11 },
  "3 9": { i: 3, j: 9 },
  "3 10": { i: 3, j: 10 },
  "3 8": { i: 3, j: 8 },
  "3 7": { i: 3, j: 7 },
  "4 7": { i: 4, j: 7 },
  "4 6": { i: 4, j: 6 },
  "5 5": { i: 5, j: 5 },
  "6 5": { i: 6, j: 5 },
  "7 4": { i: 7, j: 4 },
  "8 5": { i: 8, j: 5 },
  "9 4": { i: 9, j: 4 },
  "7 3": { i: 7, j: 3 },
  "6 4": { i: 6, j: 4 },
  "6 3": { i: 6, j: 3 },
  "5 2": { i: 5, j: 2 },
  "8 4": { i: 8, j: 4 },
  "5 1": { i: 5, j: 1 },
  "4 1": { i: 4, j: 1 },
  "10 5": { i: 10, j: 5 },
  "11 5": { i: 11, j: 5 },
  "13 5": { i: 13, j: 5 },
  "14 7": { i: 14, j: 7 },
  "15 7": { i: 15, j: 7 },
  "16 8": { i: 16, j: 8 },
  "17 8": { i: 17, j: 8 },
  "18 8": { i: 18, j: 8 },
  "19 7": { i: 19, j: 7 },
  "20 7": { i: 20, j: 7 },
  "21 6": { i: 21, j: 6 },
  "22 6": { i: 22, j: 6 },
  "16 9": { i: 16, j: 9 },
  "15 9": { i: 15, j: 9 },
  "14 10": { i: 14, j: 10 },
  "13 11": { i: 13, j: 11 },
  "14 11": { i: 14, j: 11 },
  "12 13": { i: 12, j: 13 },
  "12 12": { i: 12, j: 12 },
  "12 14": { i: 12, j: 14 },
  "13 14": { i: 13, j: 14 },
  "13 15": { i: 13, j: 15 },
  "12 16": { i: 12, j: 16 },
  "12 17": { i: 12, j: 17 },
  "11 17": { i: 11, j: 17 },
  "10 19": { i: 10, j: 19 },
  "10 21": { i: 10, j: 21 },
  "11 21": { i: 11, j: 21 },
  "11 22": { i: 11, j: 22 },
  "12 23": { i: 12, j: 23 },
  "12 24": { i: 12, j: 24 },
  "12 25": { i: 12, j: 25 },
  "13 24": { i: 13, j: 24 },
  "13 25": { i: 13, j: 25 },
  "13 26": { i: 13, j: 26 },
  "14 27": { i: 14, j: 27 },
  "15 27": { i: 15, j: 27 },
  "15 28": { i: 15, j: 28 },
  "16 29": { i: 16, j: 29 },
  "16 30": { i: 16, j: 30 },
  "17 30": { i: 17, j: 30 },
  "18 31": { i: 18, j: 31 },
  "19 31": { i: 19, j: 31 },
  "20 32": { i: 20, j: 32 },
  "18 32": { i: 18, j: 32 },
  "19 32": { i: 19, j: 32 },
  "21 32": { i: 21, j: 32 },
  "2 32": { i: 2, j: 32 },
  "12 5": { i: 12, j: 5 },
  "13 6": { i: 13, j: 6 },
  "11 4": { i: 11, j: 4 },
  "14 6": { i: 14, j: 6 },
  "4 29": { i: 4, j: 29 },
  "5 29": { i: 5, j: 29 },
  "5 30": { i: 5, j: 30 },
  "4 31": { i: 4, j: 31 },
  "5 31": { i: 5, j: 31 },
  "6 31": { i: 6, j: 31 },
  "7 31": { i: 7, j: 31 },
  "8 31": { i: 8, j: 31 },
  "9 31": { i: 9, j: 31 },
  "10 31": { i: 10, j: 31 },
  "11 31": { i: 11, j: 31 },
  "12 31": { i: 12, j: 31 },
  "13 31": { i: 13, j: 31 },
  "14 31": { i: 14, j: 31 },
  "15 31": { i: 15, j: 31 },
  "16 31": { i: 16, j: 31 },
  "15 30": { i: 15, j: 30 },
  "6 30": { i: 6, j: 30 },
  "7 30": { i: 7, j: 30 },
  "8 30": { i: 8, j: 30 },
  "9 30": { i: 9, j: 30 },
  "10 30": { i: 10, j: 30 },
  "11 30": { i: 11, j: 30 },
  "12 30": { i: 12, j: 30 },
  "13 30": { i: 13, j: 30 },
  "14 30": { i: 14, j: 30 },
  "15 29": { i: 15, j: 29 },
  "5 28": { i: 5, j: 28 },
  "6 29": { i: 6, j: 29 },
  "7 29": { i: 7, j: 29 },
  "8 29": { i: 8, j: 29 },
  "9 29": { i: 9, j: 29 },
  "10 29": { i: 10, j: 29 },
  "11 28": { i: 11, j: 28 },
  "11 29": { i: 11, j: 29 },
  "12 29": { i: 12, j: 29 },
  "13 29": { i: 13, j: 29 },
  "13 28": { i: 13, j: 28 },
  "14 29": { i: 14, j: 29 },
  "14 28": { i: 14, j: 28 },
  "13 27": { i: 13, j: 27 },
  "12 28": { i: 12, j: 28 },
  "5 27": { i: 5, j: 27 },
  "6 28": { i: 6, j: 28 },
  "7 28": { i: 7, j: 28 },
  "8 28": { i: 8, j: 28 },
  "9 28": { i: 9, j: 28 },
  "10 28": { i: 10, j: 28 },
  "11 27": { i: 11, j: 27 },
  "12 27": { i: 12, j: 27 },
  "5 25": { i: 5, j: 25 },
  "5 26": { i: 5, j: 26 },
  "6 27": { i: 6, j: 27 },
  "7 27": { i: 7, j: 27 },
  "9 27": { i: 9, j: 27 },
  "10 27": { i: 10, j: 27 },
  "11 26": { i: 11, j: 26 },
  "12 26": { i: 12, j: 26 },
  "5 22": { i: 5, j: 22 },
  "5 23": { i: 5, j: 23 },
  "5 24": { i: 5, j: 24 },
  "6 26": { i: 6, j: 26 },
  "7 26": { i: 7, j: 26 },
  "8 27": { i: 8, j: 27 },
  "9 26": { i: 9, j: 26 },
  "10 26": { i: 10, j: 26 },
  "11 25": { i: 11, j: 25 },
  "6 25": { i: 6, j: 25 },
  "7 25": { i: 7, j: 25 },
  "8 26": { i: 8, j: 26 },
  "9 25": { i: 9, j: 25 },
  "10 25": { i: 10, j: 25 },
  "11 24": { i: 11, j: 24 },
  "6 24": { i: 6, j: 24 },
  "7 24": { i: 7, j: 24 },
  "8 25": { i: 8, j: 25 },
  "9 24": { i: 9, j: 24 },
  "10 24": { i: 10, j: 24 },
  "11 23": { i: 11, j: 23 },
  "6 23": { i: 6, j: 23 },
  "8 24": { i: 8, j: 24 },
  "8 21": { i: 8, j: 21 },
  "9 23": { i: 9, j: 23 },
  "10 23": { i: 10, j: 23 },
  "10 22": { i: 10, j: 22 },
  "9 22": { i: 9, j: 22 },
  "8 23": { i: 8, j: 23 },
  "7 22": { i: 7, j: 22 },
  "6 22": { i: 6, j: 22 },
  "7 5": { i: 7, j: 5 },
  "6 6": { i: 6, j: 6 },
  "5 6": { i: 5, j: 6 },
  "4 8": { i: 4, j: 8 },
  "5 7": { i: 5, j: 7 },
  "6 7": { i: 6, j: 7 },
  "7 6": { i: 7, j: 6 },
  "8 6": { i: 8, j: 6 },
  "9 5": { i: 9, j: 5 },
  "4 9": { i: 4, j: 9 },
  "5 8": { i: 5, j: 8 },
  "6 8": { i: 6, j: 8 },
  "7 7": { i: 7, j: 7 },
  "9 6": { i: 9, j: 6 },
  "10 6": { i: 10, j: 6 },
  "8 7": { i: 8, j: 7 },
  "12 6": { i: 12, j: 6 },
  "4 10": { i: 4, j: 10 },
  "5 9": { i: 5, j: 9 },
  "6 9": { i: 6, j: 9 },
  "7 8": { i: 7, j: 8 },
  "8 8": { i: 8, j: 8 },
  "9 7": { i: 9, j: 7 },
  "10 7": { i: 10, j: 7 },
  "11 6": { i: 11, j: 6 },
  "3 11": { i: 3, j: 11 },
  "4 11": { i: 4, j: 11 },
  "5 10": { i: 5, j: 10 },
  "6 10": { i: 6, j: 10 },
  "7 9": { i: 7, j: 9 },
  "8 9": { i: 8, j: 9 },
  "9 8": { i: 9, j: 8 },
  "10 8": { i: 10, j: 8 },
  "11 7": { i: 11, j: 7 },
  "12 7": { i: 12, j: 7 },
  "13 7": { i: 13, j: 7 },
  "3 12": { i: 3, j: 12 },
  "4 12": { i: 4, j: 12 },
  "5 11": { i: 5, j: 11 },
  "6 11": { i: 6, j: 11 },
  "7 10": { i: 7, j: 10 },
  "8 10": { i: 8, j: 10 },
  "9 9": { i: 9, j: 9 },
  "10 9": { i: 10, j: 9 },
  "11 8": { i: 11, j: 8 },
  "12 8": { i: 12, j: 8 },
  "14 8": { i: 14, j: 8 },
  "15 8": { i: 15, j: 8 },
  "4 13": { i: 4, j: 13 },
  "5 12": { i: 5, j: 12 },
  "6 12": { i: 6, j: 12 },
  "7 11": { i: 7, j: 11 },
  "8 11": { i: 8, j: 11 },
  "9 10": { i: 9, j: 10 },
  "10 10": { i: 10, j: 10 },
  "11 9": { i: 11, j: 9 },
  "12 9": { i: 12, j: 9 },
  "13 8": { i: 13, j: 8 },
  "14 9": { i: 14, j: 9 },
  "4 14": { i: 4, j: 14 },
  "5 13": { i: 5, j: 13 },
  "6 13": { i: 6, j: 13 },
  "7 12": { i: 7, j: 12 },
  "8 12": { i: 8, j: 12 },
  "9 11": { i: 9, j: 11 },
  "10 11": { i: 10, j: 11 },
  "11 10": { i: 11, j: 10 },
  "12 10": { i: 12, j: 10 },
  "13 9": { i: 13, j: 9 },
  "4 15": { i: 4, j: 15 },
  "5 14": { i: 5, j: 14 },
  "6 14": { i: 6, j: 14 },
  "8 13": { i: 8, j: 13 },
  "9 12": { i: 9, j: 12 },
  "7 13": { i: 7, j: 13 },
  "10 12": { i: 10, j: 12 },
  "11 11": { i: 11, j: 11 },
  "12 11": { i: 12, j: 11 },
  "13 10": { i: 13, j: 10 },
  "5 15": { i: 5, j: 15 },
  "6 15": { i: 6, j: 15 },
  "7 14": { i: 7, j: 14 },
  "8 14": { i: 8, j: 14 },
  "9 13": { i: 9, j: 13 },
  "10 13": { i: 10, j: 13 },
  "11 12": { i: 11, j: 12 },
  "6 16": { i: 6, j: 16 },
  "7 15": { i: 7, j: 15 },
  "8 15": { i: 8, j: 15 },
  "9 14": { i: 9, j: 14 },
  "10 14": { i: 10, j: 14 },
  "11 13": { i: 11, j: 13 },
  "7 16": { i: 7, j: 16 },
  "8 16": { i: 8, j: 16 },
  "9 15": { i: 9, j: 15 },
  "10 15": { i: 10, j: 15 },
  "11 14": { i: 11, j: 14 },
  "12 15": { i: 12, j: 15 },
  "11 15": { i: 11, j: 15 },
  "10 16": { i: 10, j: 16 },
  "9 16": { i: 9, j: 16 },
  "8 17": { i: 8, j: 17 },
  "7 17": { i: 7, j: 17 },
  "8 18": { i: 8, j: 18 },
  "9 17": { i: 9, j: 17 },
  "7 21": { i: 7, j: 21 },
  "9 20": { i: 9, j: 20 },
  "8 22": { i: 8, j: 22 },
  "9 21": { i: 9, j: 21 },
  "10 20": { i: 10, j: 20 },
  "10 18": { i: 10, j: 18 },
  "11 18": { i: 11, j: 18 },
  "10 17": { i: 10, j: 17 },
  "11 16": { i: 11, j: 16 },
  "5 17": { i: 5, j: 17 },
  "7 18": { i: 7, j: 18 },
  "6 20": { i: 6, j: 20 },
  "6 21": { i: 6, j: 21 },
  "7 20": { i: 7, j: 20 },
  "7 19": { i: 7, j: 19 },
  "8 20": { i: 8, j: 20 },
  "8 19": { i: 8, j: 19 },
  "9 19": { i: 9, j: 19 },
  "9 18": { i: 9, j: 18 },
  "7 23": { i: 7, j: 23 },
  "3 27": { i: 3, j: 27 }
};
export const BRIDGE_TILES = {
  "6 4": { i: 6, j: 4 },
  "6 3": { i: 6, j: 3 },
  "7 3": { i: 7, j: 3 },
  "5 2": { i: 5, j: 2 },
  "5 1": { i: 5, j: 1 },
  "4 1": { i: 4, j: 1 },
  "8 4": { i: 8, j: 4 },
  "7 4": { i: 7, j: 4 },
  "17 8": { i: 17, j: 8 },
  "18 8": { i: 18, j: 8 },
  "19 7": { i: 19, j: 7 },
  "20 7": { i: 20, j: 7 },
  "21 6": { i: 21, j: 6 },
  "22 6": { i: 22, j: 6 },
  "23 5": { i: 23, j: 5 }
};
export const PERIMETER_TILES = {
  "2 11": { i: 2, j: 11 },
  "2 12": { i: 2, j: 12 },
  "2 13": { i: 2, j: 13 },
  "2 32": { i: 2, j: 32 },
  "3 7": { i: 3, j: 7 },
  "3 8": { i: 3, j: 8 },
  "3 9": { i: 3, j: 9 },
  "3 10": { i: 3, j: 10 },
  "3 13": { i: 3, j: 13 },
  "3 14": { i: 3, j: 14 },
  "3 15": { i: 3, j: 15 },
  "3 27": { i: 3, j: 27 },
  "3 28": { i: 3, j: 28 },
  "3 29": { i: 3, j: 29 },
  "3 30": { i: 3, j: 30 },
  "3 31": { i: 3, j: 31 },
  "3 32": { i: 3, j: 32 },
  "4 1": { i: 4, j: 1 },
  "4 6": { i: 4, j: 6 },
  "4 7": { i: 4, j: 7 },
  "4 16": { i: 4, j: 16 },
  "4 22": { i: 4, j: 22 },
  "4 23": { i: 4, j: 23 },
  "4 24": { i: 4, j: 24 },
  "4 25": { i: 4, j: 25 },
  "4 26": { i: 4, j: 26 },
  "4 27": { i: 4, j: 27 },
  "4 32": { i: 4, j: 32 },
  "5 5": { i: 5, j: 5 },
  "5 16": { i: 5, j: 16 },
  "5 17": { i: 5, j: 17 },
  "5 19": { i: 5, j: 19 },
  "5 20": { i: 5, j: 20 },
  "5 21": { i: 5, j: 21 },
  "5 32": { i: 5, j: 32 },
  "6 5": { i: 6, j: 5 },
  "6 18": { i: 6, j: 18 },
  "6 19": { i: 6, j: 19 },
  "6 32": { i: 6, j: 32 },
  "7 31": { i: 7, j: 31 },
  "7 32": { i: 7, j: 32 },
  "8 4": { i: 8, j: 4 },
  "8 32": { i: 8, j: 32 },
  "9 4": { i: 9, j: 4 },
  "9 32": { i: 9, j: 32 },
  "10 5": { i: 10, j: 5 },
  "10 19": { i: 10, j: 19 },
  "10 20": { i: 10, j: 20 },
  "10 21": { i: 10, j: 21 },
  "10 32": { i: 10, j: 32 },
  "11 4": { i: 11, j: 4 },
  "11 17": { i: 11, j: 17 },
  "11 18": { i: 11, j: 18 },
  "11 21": { i: 11, j: 21 },
  "11 22": { i: 11, j: 22 },
  "11 31": { i: 11, j: 31 },
  "11 32": { i: 11, j: 32 },
  "12 5": { i: 12, j: 5 },
  "12 12": { i: 12, j: 12 },
  "12 13": { i: 12, j: 13 },
  "12 14": { i: 12, j: 14 },
  "12 16": { i: 12, j: 16 },
  "12 17": { i: 12, j: 17 },
  "12 23": { i: 12, j: 23 },
  "12 24": { i: 12, j: 24 },
  "12 32": { i: 12, j: 32 },
  "13 5": { i: 13, j: 5 },
  "13 11": { i: 13, j: 11 },
  "13 14": { i: 13, j: 14 },
  "13 15": { i: 13, j: 15 },
  "13 24": { i: 13, j: 24 },
  "13 25": { i: 13, j: 25 },
  "13 32": { i: 13, j: 32 },
  "14 6": { i: 14, j: 6 },
  "14 7": { i: 14, j: 7 },
  "14 10": { i: 14, j: 10 },
  "14 11": { i: 14, j: 11 },
  "14 26": { i: 14, j: 26 },
  "14 27": { i: 14, j: 27 },
  "14 32": { i: 14, j: 32 },
  "15 7": { i: 15, j: 7 },
  "15 9": { i: 15, j: 9 },
  "15 27": { i: 15, j: 27 },
  "15 28": { i: 15, j: 28 },
  "15 32": { i: 15, j: 32 },
  "16 8": { i: 16, j: 8 },
  "16 29": { i: 16, j: 29 },
  "16 30": { i: 16, j: 30 },
  "16 32": { i: 16, j: 32 },
  "17 30": { i: 17, j: 30 },
  "17 32": { i: 17, j: 32 },
  "18 31": { i: 18, j: 31 },
  "18 32": { i: 18, j: 32 },
  "19 31": { i: 19, j: 31 },
  "19 32": { i: 19, j: 32 },
  "20 32": { i: 20, j: 32 },
  "21 32": { i: 21, j: 32 },
  "22 6": { i: 22, j: 6 }
};
export const PLAYER_ABILITIES = {
  ice: {
    passiveName: "Cold Shoulder",
    activeName: "Ice Slice",
    range: 3,
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 35,
        statusKey: "isCold",
        numTiles: 6,
        setTileStatuses
      }),
    displayLookup: "abilityIce",
    Element: "Ice",
    element: "ice",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 2000
  },
  glass: {
    passiveName: "Shatter Shot",
    activeName: "Shatter Travel",
    range: 30,
    type: "utility",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) => setTeleportData(_teleportData => [..._teleportData, k]),
    getPlayerIndex: k => k,
    displayLookup: "abilityGlass",
    Element: "Glass",
    element: "glass",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 12000
  },
  fire: {
    passiveName: "Campfire",
    activeName: "Dragon's Breath",
    range: 10,
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 10,
        statusKey: "isOnFire",
        numTiles: 3,
        setTileStatuses
      }),
    displayLookup: "abilityFire",
    Element: "Fire",
    element: "fire",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 6000
  },
  wood: {
    passiveName: "Barkskin",
    activeName: "Overgrowth",
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 10,
        statusKey: "isWooded",
        numTiles: 3,
        setTileStatuses
      }),
    range: 10,
    displayLookup: "abilityWood",
    Element: "Wood",
    element: "wood",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 6000
  },
  lightning: {
    passiveName: "Charged Step",
    activeName: "Discharge",
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 30,
        statusKey: "isElectrified",
        numTiles: 3,
        setTileStatuses
      }),
    range: 10,
    displayLookup: "abilityLightning",
    Element: "Lightning",
    element: "lightning",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 2000
  },
  death: {
    passiveName: "Reaper",
    activeName: "Haunt",
    range: 10,
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 30,
        statusKey: "isGhosted",
        numTiles: 1,
        setTileStatuses
      }),
    displayLookup: "abilityDeath",
    Element: "Death",
    element: "death",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 15000
  },
  bubble: {
    passiveName: "Shelter",
    activeName: "Dispel",
    type: "defensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 7,
        statusKey: "isBubble",
        numTiles: 6,
        setTileStatuses
      }),
    range: 4,
    displayLookup: "abilityBubble",
    Element: "Bubble",
    element: "bubble",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 8000
  },
  metal: {
    passiveName: "Aegis Armor",
    activeName: "Aegis",
    type: "defensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 2,
        statusKey: "isShielded",
        numTiles: 6,
        setTileStatuses
      }),
    range: 2,
    displayLookup: "abilityMetal",
    Element: "Metal",
    element: "metal",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 10000
  },
  heart: {
    passiveName: "Good Vibes",
    activeName: "Heal",
    type: "offensive", // change this.
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 20,
        statusKey: "isHealing",
        numTiles: 1,
        setTileStatuses
      }),
    range: 10,
    displayLookup: "abilityHeart",
    Element: "Heart",
    element: "heart",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 10000
  },
  kaijuFire: {
    passiveName: "Campfire",
    activeName: "Dragon's Breath",
    range: 30,
    type: "offensive",
    activateActive: (
      k,
      data,
      setTeleportData,
      targetData,
      setTileStatuses,
      scale
    ) =>
      shootPower({
        data,
        dataIndex: k,
        targetData,
        scale,
        count: 20,
        statusKey: "isOnFire",
        numTiles: 3,
        setTileStatuses
      }),
    displayLookup: "abilityFire",
    Element: "Fire",
    element: "fire",
    isPassive: false,
    isActive: false,
    accTime: 0,
    cooldownTime: 8000
  }
};

export const PLAYER_CLASSES = [
  "Bubble,Death,Fire Dark Wizard",
  "Bubble,Death,Glass Dark Fairy",
  "Bubble,Death,Heart Wild Mage",
  "Bubble,Death,Ice Sorcerer",
  "Bubble,Death,Lightning Dark Wizard",
  "Bubble,Death,Metal Undead Provisioner",
  "Bubble,Death,Wood Undead Fairy",
  "Bubble,Fire,Glass High wizard",
  "Bubble,Fire,Heart Sorcerer",
  "Bubble,Fire,Ice Sorcerer",
  "Bubble,Fire,Lightning High Wizard",
  "Bubble,Fire,Metal General",
  "Bubble,Fire,Wood Charred Fairy",
  "Bubble,Glass,Heart Light Fairy",
  "Bubble,Glass,Ice Escapist",
  "Bubble,Glass,Lightning High Wizard",
  "Bubble,Glass,Metal Dispeller",
  "Bubble,Glass,Wood Fairy",
  "Bubble,Heart,Ice Alchemist",
  "Bubble,Heart,Lightning Genie",
  "Bubble,Heart,Metal Healer",
  "Bubble,Heart,Wood Druid",
  "Bubble,Ice,Lightning Fury",
  "Bubble,Ice,Metal Cold King",
  "Bubble,Ice,Wood Trapper",
  "Bubble,Lightning,Metal Elemental Archer",
  "Bubble,Lightning,Wood Stormcaller",
  "Bubble,Metal,Wood Scientist",
  "Death,Fire,Glass Infernalist",
  "Death,Fire,Heart Sorcerer",
  "Death,Fire,Ice Horseman",
  "Death,Fire,Lightning Warlock",
  "Death,Fire,Metal Death Knight",
  "Death,Fire,Wood Unkempt Druid",
  "Death,Glass,Heart Psychopomp",
  "Death,Glass,Ice Necromancer",
  "Death,Glass,Lightning Duelist",
  "Death,Glass,Metal Death Knight",
  "Death,Glass,Wood Grim Reaper",
  "Death,Heart,Ice Ferryman",
  "Death,Heart,Lightning Sorcerer",
  "Death,Heart,Metal Forsaken Paladin",
  "Death,Heart,Wood Shaman",
  "Death,Ice,Lightning Undead Pirate",
  "Death,Ice,Metal Draugr",
  "Death,Ice,Wood Undertaker",
  "Death,Lightning,Metal Undead Archer",
  "Death,Lightning,Wood Shaman",
  "Death,Metal,Wood Vale Knight",
  "Fire,Glass,Heart Bard",
  "Fire,Glass,Ice Wizard",
  "Fire,Glass,Lightning Wizard",
  "Fire,Glass,Metal Archon",
  "Fire,Glass,Wood Charred Fairy",
  "Fire,Heart,Ice Sorcerer",
  "Fire,Heart,Lightning Shaman",
  "Fire,Heart,Metal Crusader",
  "Fire,Heart,Wood Bard",
  "Fire,Ice,Lightning Elementalist",
  "Fire,Ice,Metal Enchanter",
  "Fire,Ice,Wood Hag",
  "Fire,Lightning,Metal Battlemage",
  "Fire,Lightning,Wood Naturalist",
  "Fire,Metal,Wood Blacksmith",
  "Glass,Heart,Ice Interloper",
  "Glass,Heart,Lightning Valkyrie",
  "Glass,Heart,Metal Cleric",
  "Glass,Heart,Wood Sprite",
  "Glass,Ice,Lightning Weather Witch",
  "Glass,Ice,Metal Sherpa",
  "Glass,Ice,Wood Trapper",
  "Glass,Lightning,Metal Phalanx",
  "Glass,Lightning,Wood Druid",
  "Glass,Metal,Wood Gardener",
  "Heart,Ice,Lightning Soothsayer",
  "Heart,Ice,Metal Icy Architect",
  "Heart,Ice,Wood Hedge Witch",
  "Heart,Lightning,Metal Enchanted Archer",
  "Heart,Lightning,Wood Druid",
  "Heart,Metal,Wood Ranger",
  "Ice,Lightning,Metal Stormcaller",
  "Ice,Lightning,Wood Druid",
  "Ice,Metal,Wood Ranger",
  "Lightning,Metal,Wood Ranger"
];
// bubble, death, fire, glass, heart, ice, lightning, metal, wood
// export const PLAYER_CLASSES = [
//   "Glass,Fire,Wood Charred Fairy",
//   "Glass,Fire,Lightning Wizard",
//   "Glass,Fire,Death Infernalist",
//   "Glass,Fire,Bubble High wizard",
//   "Glass,Fire,Metal Archon",
//   "Glass,Fire,Ice Wizard",
//   "Glass,Fire,Heart Bard",
//   "Glass,Wood,Lightning Druid",
//   "Glass,Wood,Death Grim Reaper",
//   "Glass,Wood,Bubble Fairy",
//   "Glass,Wood,Metal Gardener",
//   "Glass,Wood,Ice Trapper",
//   "Glass,Wood,Heart Sprite",
//   "Glass,Lightning,Death Duelist",
//   "Glass,Lightning,Bubble High Wizard",
//   "Glass,Lightning,Metal Phalanx",
//   "Glass,Lightning,Ice Weather Witch",
//   "Glass,Lightning,Heart Valkyrie",
//   "Glass,Death,Bubble Dark Fairy",
//   "Glass,Death,Metal Death Knight",
//   "Glass,Death,Ice Necromancer",
//   "Glass,Death,Heart Psychopomp",
//   "Glass,Bubble,Metal Dispeller",
//   "Glass,Bubble,Ice Escapist",
//   "Glass,Bubble,Heart Light Fairy",
//   "Glass,Metal,Ice Sherpa",
//   "Glass,Metal,Heart Cleric",
//   "Glass,Ice,Heart Interloper",
//   "Fire,Wood,Lightning Naturalist",
//   "Fire,Wood,Death Unkempt Druid",
//   "Fire,Wood,Bubble Charred Fairy",
//   "Fire,Wood,Metal Blacksmith",
//   "Fire,Wood,Ice Hag",
//   "Fire,Wood,Heart Bard",
//   "Fire,Lightning,Death Warlock",
//   "Fire,Lightning,Bubble High Wizard",
//   "Fire,Lightning,Metal Battlemage",
//   "Fire,Lightning,Ice Elementalist",
//   "Fire,Lightning,Heart Shaman",
//   "Fire,Death,Bubble Dark Wizard",
//   "Fire,Death,Metal Death Knight",
//   "Fire,Death,Ice Horseman",
//   "Fire,Death,Heart Sorcerer",
//   "Fire,Bubble,Metal General",
//   "Fire,Bubble,Ice Sorcerer",
//   "Fire,Bubble,Heart Sorcerer",
//   "Fire,Metal,Ice Enchanter",
//   "Fire,Metal,Heart Crusader",
//   "Fire,Ice,Heart Sorcerer",
//   "Wood,Lightning,Death Shaman",
//   "Wood,Lightning,Bubble Stormcaller",
//   "Wood,Lightning,Metal Ranger",
//   "Wood,Lightning,Ice Druid",
//   "Wood,Lightning,Heart Druid",
//   "Wood,Death,Bubble Undead Fairy",
//   "Wood,Death,Metal Vale Knight",
//   "Wood,Death,Ice Undertaker",
//   "Wood,Death,Heart Shaman",
//   "Wood,Bubble,Metal Scientist",
//   "Wood,Bubble,Ice Trapper",
//   "Wood,Bubble,Heart Druid",
//   "Wood,Metal,Ice Ranger",
//   "Wood,Metal,Heart Ranger",
//   "Wood,Ice,Heart Hedge Witch",
//   "Lightning,Death,Bubble Dark Wizard",
//   "Lightning,Death,Metal Undead Archer",
//   "Lightning,Death,Ice Undead Pirate",
//   "Lightning,Death,Heart Sorcerer",
//   "Lightning,Bubble,Metal Elemental Archer",
//   "Lightning,Bubble,Ice Fury",
//   "Lightning,Bubble,Heart Genie",
//   "Lightning,Metal,Ice Stormcaller",
//   "Lightning,Metal,Heart Enchanted Archer",
//   "Lightning,Ice,Heart Soothsayer",
//   "Death,Bubble,Metal Undead Provisioner",
//   "Death,Bubble,Ice Sorcerer",
//   "Death,Bubble,Heart Wild Mage",
//   "Death,Metal,Ice Draugr",
//   "Death,Metal,Heart Forsaken Paladin",
//   "Death,Ice,Heart Ferryman",
//   "Bubble,Metal,Ice Cold King",
//   "Bubble,Metal,Heart Healer",
//   "Bubble,Ice,Heart Alchemist",
//   "Metal,Ice,Heart Icy Architect"
// ];

/*
stats that can be increased / decreased:
moveSpeed,
tilecount,
numTiles,
lives,
inManaPool status

PASSIVES:
glass -> random teleport away instead of [ dmg / lives-- ]
fire -> "fuel", all power count++
wood -> lives++
lightning -> moveSpeed
death -> lives++ (upon enemy death?)
bubble -> "eightball" random chance of triggering "inManaPool" status on loss of life.
metal ->
ice -> "cold shoulder" chance of ignoring a successful kaiju's attack (do not take dmg).
*/
